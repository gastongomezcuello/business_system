# Generated by Django 5.1.6 on 2025-07-27 22:43

import django.db.models.deletion
import documents.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('clients', '0002_remove_client_phone_remove_client_vat_condition_and_more'),
        ('orders', '0001_initial'),
        ('products', '0003_product_bar_code_product_brand_product_brand_code_and_more'),
        ('stores', '0002_rename_iva_condition_store_vat_condition_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Budget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('factura', 'Factura'), ('remito', 'Remito'), ('presupuesto', 'Presupuesto'), ('recibo', 'Recibo'), ('nota_credito', 'Nota de crédito')], max_length=20)),
                ('document_letter', models.CharField(choices=[('001', 'A'), ('006', 'B'), ('011', 'C'), ('015', 'R'), ('099', 'X')], default='099', max_length=3)),
                ('document_number', models.CharField(editable=False, max_length=8)),
                ('pdf_file', models.FileField(blank=True, null=True, upload_to='documents/pdf/')),
                ('date', models.DateField(auto_now_add=True)),
                ('generated', models.BooleanField(default=False)),
                ('observations', models.TextField(blank=True, null=True)),
                ('valid_until', models.DateField()),
                ('store', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='stores.store')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BudgetItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('budget', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='documents.budget')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product')),
            ],
        ),
        migrations.CreateModel(
            name='DeliveryNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('factura', 'Factura'), ('remito', 'Remito'), ('presupuesto', 'Presupuesto'), ('recibo', 'Recibo'), ('nota_credito', 'Nota de crédito')], max_length=20)),
                ('document_letter', models.CharField(choices=[('001', 'A'), ('006', 'B'), ('011', 'C'), ('015', 'R'), ('099', 'X')], default='099', max_length=3)),
                ('document_number', models.CharField(editable=False, max_length=8)),
                ('pdf_file', models.FileField(blank=True, null=True, upload_to='documents/pdf/')),
                ('date', models.DateField(auto_now_add=True)),
                ('generated', models.BooleanField(default=False)),
                ('products_delivered', models.TextField()),
                ('observations', models.TextField(blank=True, null=True)),
                ('recipient', models.CharField(max_length=255)),
                ('shipping_address', models.CharField(max_length=200)),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='orders.order')),
                ('store', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='stores.store')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('factura', 'Factura'), ('remito', 'Remito'), ('presupuesto', 'Presupuesto'), ('recibo', 'Recibo'), ('nota_credito', 'Nota de crédito')], max_length=20)),
                ('document_letter', models.CharField(choices=[('001', 'A'), ('006', 'B'), ('011', 'C'), ('015', 'R'), ('099', 'X')], default='099', max_length=3)),
                ('document_number', models.CharField(editable=False, max_length=8)),
                ('pdf_file', models.FileField(blank=True, null=True, upload_to='documents/pdf/')),
                ('date', models.DateField(auto_now_add=True)),
                ('generated', models.BooleanField(default=False)),
                ('b64_fiscal_data', models.TextField(blank=True, null=True)),
                ('json_arca_request', models.JSONField(blank=True, null=True)),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='orders.order')),
                ('store', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='stores.store')),
            ],
        ),
        migrations.CreateModel(
            name='CreditNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('factura', 'Factura'), ('remito', 'Remito'), ('presupuesto', 'Presupuesto'), ('recibo', 'Recibo'), ('nota_credito', 'Nota de crédito')], max_length=20)),
                ('document_letter', models.CharField(choices=[('001', 'A'), ('006', 'B'), ('011', 'C'), ('015', 'R'), ('099', 'X')], default='099', max_length=3)),
                ('document_number', models.CharField(editable=False, max_length=8)),
                ('pdf_file', models.FileField(blank=True, null=True, upload_to='documents/pdf/')),
                ('date', models.DateField(auto_now_add=True)),
                ('generated', models.BooleanField(default=False)),
                ('observations', models.TextField(blank=True, null=True)),
                ('store', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='stores.store')),
                ('invoice', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='documents.invoice')),
            ],
        ),
        migrations.CreateModel(
            name='Receipt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('factura', 'Factura'), ('remito', 'Remito'), ('presupuesto', 'Presupuesto'), ('recibo', 'Recibo'), ('nota_credito', 'Nota de crédito')], max_length=20)),
                ('document_letter', models.CharField(choices=[('001', 'A'), ('006', 'B'), ('011', 'C'), ('015', 'R'), ('099', 'X')], default='099', max_length=3)),
                ('document_number', models.CharField(editable=False, max_length=8)),
                ('pdf_file', models.FileField(blank=True, null=True, upload_to='documents/pdf/')),
                ('date', models.DateField(auto_now_add=True)),
                ('generated', models.BooleanField(default=False)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clients.client')),
                ('payment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='clients.paymentrecord')),
                ('store', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='stores.store')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('factura', 'Factura'), ('remito', 'Remito'), ('presupuesto', 'Presupuesto'), ('recibo', 'Recibo'), ('nota_credito', 'Nota de crédito')], max_length=20)),
                ('document_letter', models.CharField(choices=[('001', 'A'), ('006', 'B'), ('011', 'C'), ('015', 'R'), ('099', 'X')], default='099', max_length=3)),
                ('document_number', models.CharField(editable=False, max_length=8)),
                ('pdf_file', models.FileField(blank=True, null=True, upload_to='documents/pdf/')),
                ('date', models.DateField(auto_now_add=True)),
                ('generated', models.BooleanField(default=False)),
                ('reserved_until', models.DateField(default=documents.models.Reservation.default_reserved_until)),
                ('status', models.CharField(choices=[('active', 'Active'), ('expired', 'Expired'), ('confirmed', 'Confirmed'), ('cancelled', 'Cancelled')], default='active', max_length=15)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clients.client')),
                ('store', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='stores.store')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReservationItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product')),
                ('reservation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='documents.reservation')),
            ],
        ),
        migrations.CreateModel(
            name='Return',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('factura', 'Factura'), ('remito', 'Remito'), ('presupuesto', 'Presupuesto'), ('recibo', 'Recibo'), ('nota_credito', 'Nota de crédito')], max_length=20)),
                ('document_letter', models.CharField(choices=[('001', 'A'), ('006', 'B'), ('011', 'C'), ('015', 'R'), ('099', 'X')], default='099', max_length=3)),
                ('document_number', models.CharField(editable=False, max_length=8)),
                ('pdf_file', models.FileField(blank=True, null=True, upload_to='documents/pdf/')),
                ('date', models.DateField(auto_now_add=True)),
                ('generated', models.BooleanField(default=False)),
                ('products_returned', models.TextField()),
                ('observations', models.TextField(blank=True, null=True)),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='orders.order')),
                ('store', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='stores.store')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddConstraint(
            model_name='invoice',
            constraint=models.UniqueConstraint(fields=('document_type', 'document_letter', 'document_number', 'store'), name='unique_invoice_document_per_store'),
        ),
        migrations.AddConstraint(
            model_name='creditnote',
            constraint=models.UniqueConstraint(fields=('document_type', 'document_letter', 'document_number', 'store'), name='unique_credit_note_document_per_store'),
        ),
    ]
